---
- name: Pull sources from the repository.
  git: >
    repo={{ project_repo }}
    dest={{ project_root }}
    version={{ branch }}
    force=yes

- name: Install packages required by the Django app inside virtualenv.
  pip: >
    virtualenv={{ virtualenv_dir }}
    requirements={{ project_root }}/requirements/production.txt

- name: Run Django database migrations.
  django_manage: >
    command=migrate
    app_path={{ project_root }}
    virtualenv={{ virtualenv_dir }}
  environment: django_environment

- name: Add sync to cron
  cron: >
    name="Sync everything"
    minute="1"
    hour="18"
    day="2"
    job="{{virtualenv_dir}}/bin/python {{project_root}}/manage.py sync -f >/dev/null 2>&1"
  notify:
   - Restart Crontab

- name: Generate teams
  cron: >
    name="Generate teams"
    minute="5"
    hour="18"
    day="2"
    job="{{virtualenv_dir}}/bin/python {{project_root}}/manage.py generate_teams >/dev/null 2>&1"
  notify:
   - Restart Crontab

- name: Run bower update.
  django_manage: >
    command='bower update'
    app_path={{ project_root }}
    virtualenv={{ virtualenv_dir }}
  environment: django_environment

- name: Run Django collectstatic.
  django_manage: >
    command=collectstatic
    app_path={{ project_root }}
    virtualenv={{ virtualenv_dir }}
  environment: django_environment

- name: Restart web frontend (gunicorn).
  service: name=gunicorn state=restarted
  sudo_user: root

- name: Restart NGINX.
  service: name=nginx state=restarted
  sudo_user: root

